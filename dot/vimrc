set nocompatible

syntax enable

filetype on
filetype off
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-unimpaired'
Bundle 'tpope/vim-repeat'
Bundle 'kana/vim-textobj-user'
Bundle 'kana/vim-textobj-indent'
Bundle 'scrooloose/syntastic'
Bundle 'rking/ag.vim'
Bundle 'kien/ctrlp.vim'
Bundle 'skwp/greplace.vim'
Bundle 'matchit.zip'

filetype plugin indent on
syntax off

set autoindent
set autoread
set backspace=2
set backup
set clipboard=unnamed
set completeopt=menu,longest
set encoding=utf-8
set expandtab
set ignorecase
set incsearch
set hidden
set history=1000
set hlsearch
set laststatus=1
set list
set listchars=tab:›\ ,trail:·,extends:#,nbsp:.
set ruler
set scrolloff=3
set shortmess+=filmnrxoOtT
set showcmd
set smartcase
set shiftwidth=4
set softtabstop=4
set tabstop=8
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set wildmenu
set wildmode=list:longest,full
set whichwrap+=<,>,h,l,[,]
set mouse=a
if has('persistent_undo')
    set undofile
    set undolevels=1000
    set undoreload=10000
endif

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <s-h> gT
map <s-l> gt
noremap j gj
noremap k gk
nnoremap Y y$
vnoremap < <gv
vnoremap > >gv
map zl zL
map zh zH
map <silent> <c-L> :nohlsearch<cr>

cmap cwd lcd %:p:h
cmap w!! w !sudo tee % >/dev/null

command! -nargs=1 Silent
            \ | execute ':silent !'.<q-args>
            \ | execute ':redraw!'
cmap mk Silent make

autocmd BufRead,BufNewFile *.md setlocal filetype=markdown spell
autocmd VimResized * :wincmd =
autocmd BufWritePre <buffer> call StripTrailingWhitespace()
autocmd BufWinEnter,WinEnter * let w:m2=matchadd('ColorColumn', '\%>79v.\+', -1)
autocmd FileType c,cpp,sh,awk call UnixStyle()

let g:ctrlp_match_window = 'order:ttb,max:20'
let g:wildfire_objects = ["i'", 'i"', 'i)', 'i]', 'i}', 'ii', 'it', 'ip']

if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

function! InitializeDirectories()
    let parent = $HOME
    let prefix = 'vim/'
    let dir_list = {
                \ 'backup': 'backupdir',
                \ 'views': 'viewdir',
                \ 'swap': 'directory' }
    if has('persistent_undo')
        let dir_list['undo'] = 'undodir'
    endif
    let common_dir = parent . '/.' . prefix
    for [dirname, settingname] in items(dir_list)
        let directory = common_dir . dirname . '/'
        if exists("*mkdir")
            if !isdirectory(directory)
                call mkdir(directory)
            endif
        endif
        if !isdirectory(directory)
            echo "Warning: Unable to create backup directory: " . directory
            echo "Try: mkdir -p " . directory
        else
            let directory = substitute(directory, " ", "\\\\ ", "g")
            exec "set " . settingname . "=" . directory
        endif
    endfor
endfunction
call InitializeDirectories()

function! StripTrailingWhitespace()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " do the business:
    %s/\s\+$//e
    " clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

function! UnixStyle()
    setlocal shiftwidth=8
    setlocal softtabstop=8
    setlocal tabstop=8
    setlocal noexpandtab
    setlocal textwidth=79
    setlocal wrap
    setlocal cindent
    setlocal cinoptions=:0,l1,t0,g0
    setlocal formatoptions=tcqlron
    setlocal listchars=tab:\ \ ,trail:·,extends:#,nbsp:.
endfunction
